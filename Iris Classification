from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
import pandas as pd
import numpy as np

# Load the dataset
from google.colab import files
uploaded = files.upload()
file_path = 'IRIS.csv'
iris_df = pd.read_csv(file_path)

# Encoding the 'species' column
label_encoder = LabelEncoder()
iris_df['species'] = label_encoder.fit_transform(iris_df['species'])

# Features and target variable
X = iris_df.drop('species', axis=1)
y = iris_df['species']

# Spliting the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initializing the RFC(RandomForestClassifier)
clf = RandomForestClassifier(random_state=42)

# Traing the model
clf.fit(X_train, y_train)

# Predicting on the test set
y_pred = clf.predict(X_test)

# Evaluating the model
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred, target_names=label_encoder.classes_)

# Printing the accuracy and report
print(f'Accuracy: {accuracy}')
print(f'Classification Report:\n{report}')

